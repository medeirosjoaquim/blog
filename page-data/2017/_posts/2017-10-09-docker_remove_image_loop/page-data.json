{"componentChunkName":"component---src-templates-blog-post-js","path":"/2017/_posts/2017-10-09-docker_remove_image_loop/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"13ca2b8e-cb01-5eff-b241-a45d91930e51","excerpt":"Manipulate docker images with bash loop Bash is powerful and simple. Everything you can list in the screen can be \nset in a variable and manipulated. I’ve just…","html":"<h1>Manipulate docker images with bash loop</h1>\n<p>Bash is powerful and simple. Everything you can list in the screen can be\nset in a variable and manipulated.</p>\n<p>I’ve just started using Docker and I wanted to do stuff with images like\ncopy, move, delete or whatever.</p>\n<p>To list the images We can do </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker images -a</code></pre></div>\n<p>This command will return all the images in the system.\nI had some garbage like </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;none&gt;                  &lt;none&gt;              efe763a68df2        04 days ago         892MB\n&lt;none&gt;                  &lt;none&gt;              g83b695043d3        05 days ago         892MB</code></pre></div>\n<p>that I’ve wanted to get rid of.</p>\n<p>So, how We can do it?</p>\n<p>Well, first let’s loop the results and read it <strong>line</strong> line by line</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker images -a | while read line; do\n\n    commands $line\n done</code></pre></div>\n<p>Now, every line of the results will have it’s value passed through $line variable;</p>\n<p>I want to delete the images <none>, so:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker images -a | while read line; do\n   if [[ $line =~ none  ]]; then\n   sudo docker rmi $line\n  fi\ndone</code></pre></div>\n<p>$line contains the whole line and We want just the image ID’s, listed in the\nthird columns. </p>\n<p>We can use awk or sed or even grep to catch that.\nI’ll use awk:  <strong>awk ’{ print $3 }’ filename</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker images -a | while read line; do\n   if [[ $line =~ none  ]]; then\n    rmv=$(echo $line | awk &#39;{ print $3 }&#39;)\n   # ALWAYS USE ECHO TO TEST ANY CRITICAL COMMAND; like\n   #sudo echo $rmv  ; if it shows exactly what you want to delete;\n   $ then proceed\n   sudo docker rmi $rmv\n  fi\ndone</code></pre></div>\n<p>You could use this kind of loop to build daily reports for example.</p>\n<p>Hope you’ve enjoyed</p>","frontmatter":{"title":"Manipulate docker images with bash loop","date":null,"description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2017/_posts/2017-10-09-docker_remove_image_loop/","previous":{"fields":{"slug":"/2017/_posts/2017-10-17-java-xmonad/"},"frontmatter":{"title":"Fix GUI when using java apps in xmonad"}},"next":{"fields":{"slug":"/2017/_posts/2017-09-27-onelinebash/"},"frontmatter":{"title":"bash oneliner - little rain color"}}}}}